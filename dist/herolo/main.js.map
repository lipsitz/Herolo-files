{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions/video.actions.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/reducers/video.reducer.ts","webpack:///./src/app/services/omdb.service.ts","webpack:///./src/app/services/store/store.service.ts","webpack:///./src/app/services/time.service.ts","webpack:///./src/app/services/title-auth.validator.ts","webpack:///./src/app/videos/video-add-modal/video-add-modal.component.css","webpack:///./src/app/videos/video-add-modal/video-add-modal.component.html","webpack:///./src/app/videos/video-add-modal/video-add-modal.component.ts","webpack:///./src/app/videos/video-delete-modal/video-delete-modal.component.css","webpack:///./src/app/videos/video-delete-modal/video-delete-modal.component.html","webpack:///./src/app/videos/video-delete-modal/video-delete-modal.component.ts","webpack:///./src/app/videos/video-edit-modal/video-edit-modal.component.css","webpack:///./src/app/videos/video-edit-modal/video-edit-modal.component.html","webpack:///./src/app/videos/video-edit-modal/video-edit-modal.component.ts","webpack:///./src/app/videos/video-thumbnail/video-thumbnail.component.css","webpack:///./src/app/videos/video-thumbnail/video-thumbnail.component.html","webpack:///./src/app/videos/video-thumbnail/video-thumbnail.component.ts","webpack:///./src/app/videos/videos.component.css","webpack:///./src/app/videos/videos.component.html","webpack:///./src/app/videos/videos.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core'\r\nimport { Action } from '@ngrx/store'\r\nimport { IVideo } from './../models/video.model'\r\n\r\nexport const ADD_VIDEO = '[VIDEO] Add'\r\nexport const REMOVE_VIDEO = '[VIDEO] Remove'\r\nexport const UPDATE_VIDEO = '[VIDEO] Update'\r\n\r\nexport class AddVideo implements Action {\r\n    readonly type = ADD_VIDEO\r\n\r\n    constructor(public payload: IVideo) { }\r\n}\r\n\r\nexport class UpdateVideo implements Action {\r\n    readonly type = UPDATE_VIDEO\r\n\r\n    constructor(public payload: IVideo) { }\r\n}\r\n\r\nexport class RemoveVideo implements Action {\r\n    readonly type = REMOVE_VIDEO\r\n\r\n    constructor(public payload: IVideo) { }\r\n}\r\nexport type Actions = AddVideo | RemoveVideo | UpdateVideo;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {Routes,RouterModule } from '@angular/router'\nimport { VideosComponent } from './videos/videos.component';\n\n\n\nconst routes:Routes = [\n  {path:'videos' , component: VideosComponent},\n  {path: '',redirectTo:'/videos', pathMatch:'full'}\n  \n  \n  ]\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'herolo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { VideosComponent } from './videos/videos.component';\nimport { VideoThumbnailComponent } from './videos/video-thumbnail/video-thumbnail.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport {AppRoutingModule } from './app-routing.module'\nimport {OmdbService } from './services/omdb.service';\nimport {TimeService} from './services/time.service'\nimport { VideoEditModalComponent } from './videos/video-edit-modal/video-edit-modal.component';\nimport { VideoDeleteModalComponent } from './videos/video-delete-modal/video-delete-modal.component'\nimport {FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { VideoAddModalComponent } from './videos/video-add-modal/video-add-modal.component'\nimport {ToastrModule} from 'ngx-toastr'\nimport {  StoreModule } from '@ngrx/store';\nimport { reducer } from './reducers/video.reducer';\nimport { DatePipe } from '@angular/common';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    VideosComponent,\n    VideoThumbnailComponent,\n    NavbarComponent,\n    VideoEditModalComponent,\n    VideoDeleteModalComponent,\n    VideoAddModalComponent\n  ],\n  imports: [\n    ToastrModule.forRoot(\n      {\n        timeOut:2000,\n        positionClass:'toast-bottom-right',\n        preventDuplicates:true,\n      }\n    ),\n   \n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,ReactiveFormsModule,\n    StoreModule.forRoot({\n      video : reducer\n    })\n  ],\n  providers: [OmdbService,TimeService,DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"li > a.active { color: #F97924;}\"","module.exports = \"<div class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\">Herolo Cinema</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a [routerLink]=\\\"['/videos']\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">All Videos</a>\\n        </li>\\n      </ul>\\n      <div class=\\\"navbar-header navbar-right\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li>\\n            <a>By Nir lipsitz</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { IVideo } from './../models/video.model'\r\nimport * as VideoActions from './../actions/video.actions'\r\n\r\nconst initialState: IVideo[] = []\r\n\r\nexport function reducer(state = initialState, action: VideoActions.Actions | any): IVideo[] {\r\n    switch (action.type) {\r\n        case VideoActions.ADD_VIDEO:\r\n            return [...state, ...action.payload];\r\n        case VideoActions.REMOVE_VIDEO:\r\n            for (let i = 0; i < state.length; i++) {\r\n                if (state[i].imdbID === action.payload.imdbID) {\r\n                    state.splice(i, 1)\r\n                }\r\n            }\r\n\r\n            return state;\r\n        case VideoActions.UPDATE_VIDEO:\r\n            for (let i = 0; i < state.length; i++) {\r\n                if (state[i].imdbID === action.payload.imdbID) {\r\n                    state[i] = action.payload\r\n                }\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { StoreService } from './store/store.service'\nimport { IVideo } from '../models/video.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OmdbService {\n  videos: IVideo[] = []\n  movieNamesArray =\n    ['The Sum of All Fears', 'Run All Night', 'Frozen', 'The Lion King', 'The Last Samurai', 'The Kids Are All Right', 'Inception', 'All About Eve']\n  constructor(private http: HttpClient, private store: StoreService) { }\n\n  fromApiToStore() {\n    let url = 'https://www.omdbapi.com/?apikey=2b17fbae&t=';\n    this.movieNamesArray.forEach(title => {\n      this.http.get(url + title).subscribe((res) => {\n        this.store.addVideoToStore(res);\n      })\n    });\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { IVideo } from '../../models/video.model';\nimport { AppState } from '../../app.state';\nimport * as VideoActions from '../../actions/video.actions'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  videos: Observable<IVideo[]> = this.store.select('video');\n\n  constructor(private store: Store<AppState>) {}\n  \n  updateVideo(obj) {\n    this.store.dispatch(new VideoActions.UpdateVideo(obj))\n  }\n  removeVideo(id) { \n    this.store.dispatch(new VideoActions.RemoveVideo(id)) }\n\n  addVideoToStore(video) {\n    this.store.dispatch(new VideoActions.AddVideo(video))\n  }\n  getAllVideosFromStore() { return this.videos }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n public time: string;\n public yearTime: string;\n public yearTimeNumber: Number;\n public yearsArray: number[];\n  \n constructor(private datePipe: DatePipe) {\n    this.yearsArray = []\n  }\n \n\n public getYearsArray(): number[] {\n    this.time = this.datePipe.transform(new Date());\n    this.yearTime = new DatePipe('en-US').transform(this.time, 'y');\n    this.yearTimeNumber = Number(this.yearTime);\n    for (let i = 1900; i <= this.yearTimeNumber; i++) {\n      this.yearsArray.unshift(i);\n    }\n    return this.yearsArray\n  }\n}\n","import {FormControl } from '@angular/forms'\r\n\r\nexport function  restrictedTitles(titleList){\r\n    return (control:FormControl):{[key:string ]:any }=>{        \r\n        if(!titleList) return null;\r\n      var invalidWords = titleList\r\n      .map(title => control.value && control.value.includes(title) ? title:null).filter(title => title !=null)\r\n      return invalidWords && invalidWords.length>0\r\n      ? {'restrictedTitles': invalidWords.join(',')}\r\n      : null\r\n      }\r\n  }","module.exports = \"em {\\r\\n    float:right;\\r\\n    color: #E05C65;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n.error input {background-color: #E3C3C5;}\\r\\n.error ::-webkit-input-placeholder {color: #999;}\\r\\n.error ::-webkit-input-placeholder {color: #999;}\\r\\n.error ::-moz-placeholder {color: #999;}\\r\\n.error :-moz-placeholder {color: #999;}\\r\\n.error :-ms-input-placeholder {color: #999;}\"","module.exports = \"<div class=\\\"modal-dialog\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      <h4 class=\\\"modal-title\\\">Add movie to list</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"addVideo(addForm.value)\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':title.invalid && title.touched}\\\">\\n          <label for=\\\"title\\\">Title:</label>\\n          <em *ngIf=\\\"title.invalid && title.dirty && title.errors.restrictedTitles\\\">\\n            this title alerdy exist : {{title.errors.restrictedTitles }}</em>\\n          <em *ngIf=\\\"title.invalid && (title.dirty || mouseOverSubmit)\\\">required</em>\\n          <em *ngIf=\\\"title.invalid && title.dirty && title.errors.pattern\\\">Only a-z small letters</em>\\n          <input formControlName=\\\"title\\\" name=\\\"title\\\" id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"title...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':year.invalid && year.dirty}\\\">\\n          <label for=\\\"year\\\">Year:</label>\\n          <em *ngIf=\\\"year.invalid && year.dirty \\\">required</em>\\n          <select formControlName=\\\"year\\\" name=\\\"year\\\" type=\\\"number\\\" class=\\\"form-control\\\" required placeholder=\\\"year...\\\">\\n            <option value=\\\"\\\"></option>\\n            <option *ngFor=\\\"let year of yearsArray\\\" value=\\\"{{year}}\\\">{{year}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':runtime.invalid && runtime.dirty}\\\">\\n          <label for=\\\"runtime\\\">Runtime:</label>\\n          <em *ngIf=\\\"runtime.invalid && (runtime.dirty ||mouseOverSubmit)\\\">required</em>\\n          <input formControlName=\\\"runtime\\\" name=\\\"runtime\\\" id=\\\"runtime\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"runtime...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':genre.invalid && genre.dirty}\\\">\\n          <label for=\\\"genre\\\">Genre:</label>\\n          <em *ngIf=\\\"genre.invalid && (genre.dirty ||mouseOverSubmit)\\\">required</em>\\n          <input formControlName=\\\"genre\\\" name=\\\"genre\\\" id=\\\"genre\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"genre...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':director.invalid && director.dirty}\\\">\\n          <label for=\\\"director\\\">Director:</label>\\n          <em *ngIf=\\\"director.invalid && (director.dirty || mouseOverSubmit)\\\">required</em>\\n          <input formControlName=\\\"director\\\" name=\\\"director\\\" id=\\\"director\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"director...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':poster.invalid && poster.dirty}\\\">\\n          <label for=\\\"poster\\\">Img src:</label>\\n          <em *ngIf=\\\"poster.invalid && poster.dirty  && poster.errors.pattern\\\">(Must be a png or jpg url)</em>\\n          <em *ngIf=\\\"poster.invalid && poster.dirty\\\">Required</em>\\n          <input formControlName=\\\"poster\\\" required pattern=\\\".*\\\\/.*.(png|jpg)\\\" name=\\\"poster\\\" id=\\\"poster\\\" type=\\\"text\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"img src...\\\" />\\n        </div>\\n        <span (mouseenter)=\\\"mouseOverSubmit=true\\\" (mouseleave)=\\\"mouseOverSubmit=false\\\">\\n          <button type=\\\"submit\\\" (click)=\\\"addVideo(addForm.value)\\\" [disabled]=\\\"addForm.invalid\\\" data-dismiss=\\\"modal\\\"\\n            class=\\\"btn btn-success\\\">Save</button>\\n        </span>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </form>\\n\\n    </div>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { TimeService } from '../../services/time.service'\nimport { StoreService } from '../../services/store/store.service'\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { IVideo } from 'src/app/models/video.model';\nimport { restrictedTitles } from '../../services/title-auth.validator'\n@Component({\n  selector: 'app-video-add-modal',\n  templateUrl: './video-add-modal.component.html',\n  styleUrls: ['./video-add-modal.component.css']\n})\nexport class VideoAddModalComponent implements OnInit {\n  public video: any\n  public titleList = []\n  public yearsArray: number[]\n  public mouseOverSubmit;\n  public addForm: FormGroup\n  public title: FormControl;\n  public year: FormControl;\n  public runtime: FormControl;\n  public genre: FormControl;\n  public director: FormControl;\n  public poster: FormControl;\n  private counter = 0;\n\n  constructor(private storeService: StoreService, private timeService: TimeService) {\n    this.yearsArray = this.timeService.getYearsArray();\n    this.initForm();\n  }\n\n  ngOnInit() {\n    this.getTitlesFormStore();\n  }\n\n  private initForm(): void {\n    this.title = new FormControl('', [Validators.required, Validators.pattern('[a-z ]*'), restrictedTitles(this.titleList)])\n    this.year = new FormControl('', Validators.required)\n    this.runtime = new FormControl('', Validators.required)\n    this.genre = new FormControl('', Validators.required)\n    this.director = new FormControl('', Validators.required)\n    this.poster = new FormControl('', Validators.required)\n    this.addForm = new FormGroup({\n      title: this.title,\n      year: this.year,\n      runtime: this.runtime,\n      director: this.director,\n      genre: this.genre,\n      poster: this.poster\n    });\n  }\n\n  private getTitlesFormStore(): void {\n    this.storeService.getAllVideosFromStore().subscribe(\n      (res: any) => {\n        if (res.length) {\n          this.titleList.push(res[this.counter].Title.toLowerCase());\n          ++this.counter;\n        }\n      });\n  }\n\n  public addVideo(formValue): void {\n    let video: IVideo = {\n      imdbID: 'tt' + new Date().getTime(),\n      Title: formValue.title,\n      Year: formValue.year,\n      Runtime: formValue.runtime,\n      Director: formValue.director,\n      Genre: formValue.genre,\n      Type: 'movie',\n      Poster: formValue.poster\n    }\n\n    this.storeService.addVideoToStore(video);\n    setTimeout(() => {\n      this.addForm.reset()\n      this.titleList.push(formValue.Title)\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-dialog\\\">\\n\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      <h4 class=\\\"modal-title\\\">Delete Video</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <h5> Delete {{video.Title}} ? </h5>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"submit\\\" (click)=\\\"deleteVideo(video)\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Close</button>\\n    </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { StoreService } from '../../services/store/store.service';\n\n@Component({\n  selector: 'app-video-delete-modal',\n  templateUrl: './video-delete-modal.component.html',\n  styleUrls: ['./video-delete-modal.component.css']\n})\nexport class VideoDeleteModalComponent implements OnInit {\n  @Input() video: any\n\n  constructor(private storeService: StoreService) { }\n\n  ngOnInit() { }\n\n  deleteVideo(video) {\n    this.storeService.removeVideo(video)\n  }\n}\n","module.exports = \"em {\\r\\n    float:right;\\r\\n    color: #E05C65;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n.error input {background-color: #E3C3C5;}\\r\\n.error ::-webkit-input-placeholder {color: #999;}\\r\\n.error ::-webkit-input-placeholder {color: #999;}\\r\\n.error ::-moz-placeholder {color: #999;}\\r\\n.error :-moz-placeholder {color: #999;}\\r\\n.error :-ms-input-placeholder {color: #999;}\\r\\n\"","module.exports = \"<div class=\\\"modal-dialog\\\">\\n  <!-- Modal content-->\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      <h4 class=\\\"modal-title\\\">Edit : {{video.Title}}</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <span class=\\\"pull-right\\\">ID :{{video.imdbID}}</span>\\n      <p>Name :{{video.Title | titlecase}}</p>\\n      <p>Year :{{video.Year}} </p>\\n      <p>Runtime :{{video.Runtime | titlecase}}</p>\\n      <p>Genre :{{video.Genre | titlecase}}</p>\\n      <p>Director :{{video.Director | titlecase}}</p>\\n      <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"editVideo(editForm.value)\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group \\\" [ngClass]=\\\"{'error':title.invalid && title.dirty}\\\">\\n          <label for=\\\"title\\\">Title:</label>\\n          <em *ngIf=\\\"title.invalid && title.dirty && title.errors.restrictedTitles\\\">\\n            this title alerdy exist : {{title.errors.restrictedTitles }}</em>\\n          <em *ngIf=\\\"title.invalid && (title.dirty || mouseOverSubmit)\\\">Required</em>\\n          <em *ngIf=\\\"title.invalid && title.dirty && title.errors.pattern\\\">Only a-z small letters</em>\\n          <input formControlName=\\\"title\\\" id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"title...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':year.invalid && year.dirty}\\\">\\n          <label for=\\\"year\\\">Year:</label>\\n          <em *ngIf=\\\"year.invalid && year.dirty\\\">Required</em>\\n          <select formControlName=\\\"year\\\" name=\\\"year\\\" class=\\\"form-control\\\" required placeholder=\\\"year...\\\">\\n            <option *ngFor=\\\"let year of yearsArray\\\" value=\\\"{{year}}\\\">{{year}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':runtime.invalid && runtime.dirty}\\\">\\n          <label for=\\\"runtime\\\">Runtime:</label>\\n          <em *ngIf=\\\"runtime.invalid && runtime.dirty\\\">Required</em>\\n          <input formControlName=\\\"runtime\\\" id=\\\"runtime\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"runtime...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':director.invalid && director.dirty}\\\">\\n          <label for=\\\"director\\\">Director:</label>\\n          <em *ngIf=\\\"director.invalid && director.dirty\\\">Required</em>\\n          <input formControlName=\\\"director\\\" id=\\\"director\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"director...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':genre.invalid && genre.dirty}\\\">\\n          <label for=\\\"genre\\\">Genre:</label>\\n          <em *ngIf=\\\"genre.invalid && genre.dirty\\\">Required</em>\\n          <input formControlName=\\\"genre\\\" id=\\\"genre\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"genre...\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error':poster.invalid && poster.dirty}\\\">\\n          <label for=\\\"poster\\\">Poster:</label>\\n          <em *ngIf=\\\"poster.invalid && poster.dirty  && poster.errors.pattern\\\">(Must be a png or jpg url)</em>\\n          <em *ngIf=\\\"poster.invalid && poster.dirty\\\">Required</em>\\n          <input formControlName=\\\"poster\\\" required pattern=\\\".*\\\\/.*.(png|jpg)\\\" id=\\\"poster\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"poster...\\\" />\\n        </div>\\n        <span (mouseenter)=\\\"mouseOverSubmit=true\\\" (mouseleave)=\\\"mouseOverSubmit=false\\\">\\n          <button type=\\\"submit\\\" (click)=\\\"editVideo(editForm.value)\\\" [disabled]=\\\"editForm.invalid\\\" class=\\\"btn btn-primary\\\"\\n            data-dismiss=\\\"modal\\\">Save</button>\\n        </span>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </form>\\n\\n    </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { StoreService } from '../../services/store/store.service'\nimport { IVideo } from 'src/app/models/video.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { TimeService } from '../../services/time.service'\nimport { restrictedTitles } from '../../services/title-auth.validator'\n@Component({\n  selector: 'app-video-edit-modal',\n  templateUrl: './video-edit-modal.component.html',\n  styleUrls: ['./video-edit-modal.component.css']\n})\nexport class VideoEditModalComponent implements OnInit {\n  @Input() video: IVideo;\n  public mouseOverSubmit;\n  public titleList = []\n  public yearsArray: number[]\n  public editForm: FormGroup;\n  public title: FormControl;\n  public year: FormControl;\n  public runtime: FormControl;\n  public genre: FormControl;\n  public director: FormControl;\n  public poster: FormControl\n  private counter = 0;\n  constructor(private timeService: TimeService, private storeService: StoreService) {\n    this.yearsArray = this.timeService.getYearsArray()\n    this.initForm();\n  }\n\n  ngOnInit() {\n    this.getTitlesFormStore();\n  }\n\n  private initForm(): void {\n    this.title = new FormControl('', [Validators.required, Validators.pattern('[a-z ]*'), restrictedTitles(this.titleList)])\n    this.year = new FormControl('', Validators.required)\n    this.runtime = new FormControl('', Validators.required)\n    this.genre = new FormControl('', Validators.required)\n    this.director = new FormControl('', Validators.required)\n    this.poster = new FormControl('', Validators.required)\n\n    this.editForm = new FormGroup({\n      title: this.title,\n      year: this.year,\n      runtime: this.runtime,\n      director: this.director,\n      genre: this.genre,\n      poster: this.poster\n    })\n  }\n  private getTitlesFormStore(): void {\n    this.storeService.getAllVideosFromStore().subscribe(\n      (res: any) => {\n        if (res.length) {\n          this.titleList.push(res[this.counter].Title.toLowerCase());\n          ++this.counter;\n        }\n      });\n  }\n  editVideo(formValue) {\n    let video: IVideo = {\n      imdbID: this.video.imdbID,\n      Title: formValue.title,\n      Year: formValue.year,\n      Runtime: formValue.runtime,\n      Director: formValue.director,\n      Genre: formValue.genre,\n      Type: this.video.Type,\n      Poster: formValue.poster\n\n    }\n    this.storeService.updateVideo(video);\n    setTimeout(() => {\n      this.editForm.reset()\n      this.titleList.push(formValue.Title)\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <h4>{{video.Title | titlecase}}</h4>\\n</div>\\n<img style=\\\"width: 215px; height: 280px;\\\" src=\\\"{{video.Poster}}\\\" alt=\\\"{{video.Poster}}\\\">\\n<div>\\n    {{video.Type | titlecase}}<br>\\n    {{video.Year}}<br>\\n</div>\"","import { Component, OnInit, Input, } from '@angular/core';\nimport { IVideo } from 'src/app/models/video.model';\n@Component({\n  selector: 'app-video-thumbnail',\n  templateUrl: './video-thumbnail.component.html',\n  styleUrls: ['./video-thumbnail.component.css']\n})\nexport class VideoThumbnailComponent implements OnInit  {\n\n  @Input() video:IVideo;\n  constructor() {}\n\n  ngOnInit() {}\n  \n}\n","module.exports = \"    .thumbnail {\\r\\n        min-height: 300px; max-width: 280px;\\r\\n    }\\r\\n    .pad-left {\\r\\n        margin-left: 10px;\\r\\n    }\\r\\n    .well div {\\r\\n       color: #bbb\\r\\n    };\\r\\n    img {\\r\\n        border: 0;\\r\\n        width: 215px;\\r\\n        height: 280px;\\r\\n        display: inline-block;\\r\\n        position: relative;\\r\\n    }\\r\\n    .fixthebug {\\r\\n        float: left;\\r\\n        position: relative;\\r\\n        min-height: 1px;\\r\\n        padding-left: 15px;\\r\\n        padding-right: 15px;\\r\\n        box-sizing: border-box;\\r\\n    }\\r\\n    \\r\\n\\r\\n\"","module.exports = \"<div>\\n    <div class=\\\"row\\\">\\n        <h1>HEROLO Cinema Videos\\n            <button data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" class=\\\"btn btn-success pull-right\\\">Add Movie To list</button>\\n        </h1>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div *ngFor=\\\"let video of videos\\\" class=\\\"fixthebug\\\">\\n            <div class=\\\"well hoverwell thumbnail \\\">\\n                <app-video-thumbnail [video]=video></app-video-thumbnail>\\n                <button data-toggle=\\\"modal\\\" data-target=\\\"#editModal\\\" (click)=\\\"modalDataFunc(video)\\\" class=\\\"btn btn-primary\\\">\\n                    Edit</button>\\n                <button data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"modalDataFunc(video)\\\" class=\\\"btn btn-danger pull-right\\\">\\n                    Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div id=\\\"editModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <app-video-edit-modal [video]=modalData></app-video-edit-modal>\\n</div>\\n<div id=\\\"deleteModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <app-video-delete-modal [video]=modalData></app-video-delete-modal>\\n</div>\\n<div id=\\\"addModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <app-video-add-modal></app-video-add-modal>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StoreService } from '../services/store/store.service'\nimport { OmdbService } from '../services/omdb.service'\nimport { IVideo } from './../models/video.model';\n@Component({\n  selector: 'app-videos',\n  templateUrl: './videos.component.html',\n  styleUrls: ['./videos.component.css']\n})\n\nexport class VideosComponent implements OnInit {\n  videos: IVideo[] = [];\n  modalData = {\n    Title: '',\n    Year: '',\n    imdbID: '',\n    Poster: '',\n    Type: 'movie',\n    Genre: '',\n    Director: '',\n    Runtime: ''\n  }\n\n  constructor(private storeService: StoreService, private omdbService: OmdbService) { }\n\n  ngOnInit() {\n    this.omdbService.fromApiToStore()\n    this.storeService.getAllVideosFromStore().subscribe(\n      (res) => {\n        this.videos = res\n      }\n    )\n  }\n\n  modalDataFunc(video) {\n    this.modalData = video\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}